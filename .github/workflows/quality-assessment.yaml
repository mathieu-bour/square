name: Quality assessment
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  lint:
    name: Lint with eslint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js 12
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Install Node dependencies
        run: npm install
      - name: Run ESLint
        run: npm run lint
  typecheck:
    name: TypeCheck with tsc
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js 12
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Install Node dependencies
        run: npm install
      - name: Run tsc
        run: npm run typecheck
  test:
    name: Test with Jest
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js 12
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Install Node dependencies
        run: npm install
      - name: Run Jest
        run: npm run test:coverage
      - uses: codecov/codecov-action@v1
        with:
          files: ./coverage/clover.xml
  end-to-end:
    name: Test against a sample
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        sample: [dot-yaml, package-json]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run against the sample
        id: square
        uses: ./
        with:
          working-directory: samples/${{ matrix.sample }}
      - name: Dump the results
        run: echo "$RESULTS" | jq -C
        env:
          RESULTS: ${{ toJSON(steps.square.outputs) }}
